/* Generated By:JJTree&JavaCC: Do not edit this line. OutputJSConstants.java */
package com.js2pv.too;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface OutputJSConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int BOOLEAN = 6;
  /** RegularExpression Id. */
  int CONTINUE = 7;
  /** RegularExpression Id. */
  int _DEFAULT = 8;
  /** RegularExpression Id. */
  int FUNCTION = 9;
  /** RegularExpression Id. */
  int PUBLIC = 10;
  /** RegularExpression Id. */
  int RETURN = 11;
  /** RegularExpression Id. */
  int VAR = 12;
  /** RegularExpression Id. */
  int IN = 13;
  /** RegularExpression Id. */
  int LET = 14;
  /** RegularExpression Id. */
  int IF = 15;
  /** RegularExpression Id. */
  int THEN = 16;
  /** RegularExpression Id. */
  int ELSE = 17;
  /** RegularExpression Id. */
  int OUT = 18;
  /** RegularExpression Id. */
  int EVENT = 19;
  /** RegularExpression Id. */
  int FUN = 20;
  /** RegularExpression Id. */
  int REDUC = 21;
  /** RegularExpression Id. */
  int New = 22;
  /** RegularExpression Id. */
  int NULL = 23;
  /** RegularExpression Id. */
  int ident = 24;
  /** RegularExpression Id. */
  int LETTER = 25;
  /** RegularExpression Id. */
  int DIGIT = 26;
  /** RegularExpression Id. */
  int PLUS = 27;
  /** RegularExpression Id. */
  int MINUS = 28;
  /** RegularExpression Id. */
  int MUL = 29;
  /** RegularExpression Id. */
  int DIV = 30;
  /** RegularExpression Id. */
  int EQU = 31;
  /** RegularExpression Id. */
  int SEMICOLON = 32;
  /** RegularExpression Id. */
  int LP = 33;
  /** RegularExpression Id. */
  int RP = 34;
  /** RegularExpression Id. */
  int EQ = 35;
  /** RegularExpression Id. */
  int NOTEQ = 36;
  /** RegularExpression Id. */
  int LT = 37;
  /** RegularExpression Id. */
  int SMALLEQ = 38;
  /** RegularExpression Id. */
  int NEQ = 39;
  /** RegularExpression Id. */
  int OR = 40;
  /** RegularExpression Id. */
  int AND = 41;
  /** RegularExpression Id. */
  int ISTO = 42;
  /** RegularExpression Id. */
  int IMPLY = 43;
  /** RegularExpression Id. */
  int BIGEQ = 44;
  /** RegularExpression Id. */
  int POINT = 45;
  /** RegularExpression Id. */
  int YINHAO = 46;
  /** RegularExpression Id. */
  int COMMA = 47;
  /** RegularExpression Id. */
  int LB = 48;
  /** RegularExpression Id. */
  int RB = 49;
  /** RegularExpression Id. */
  int OBRACE = 50;
  /** RegularExpression Id. */
  int CBARCE = 51;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"boolean\"",
    "\"continue\"",
    "\"default\"",
    "\"function\"",
    "\"public\"",
    "\"return\"",
    "\"var\"",
    "\"in\"",
    "\"let\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"out\"",
    "\"event\"",
    "\"fun\"",
    "\"reduc\"",
    "\"new\"",
    "\"NULL\"",
    "<ident>",
    "<LETTER>",
    "<DIGIT>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"==\"",
    "\"!=\"",
    "\"< \"",
    "\"<=\"",
    "\"<>\"",
    "\"||\"",
    "\"&&\"",
    "\"==>\"",
    "\"->\"",
    "\">=\"",
    "\".\"",
    "\"^\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
  };

}
